/*
Name : Md Rubel Shakh
Roll : B50
Section : K18LE
Reg : 11810331
*/
/* Question**

*/

#include<stdio.h>
#include<stdlib.h>
int main()
{
		/*  
		Declaring all necessery variable for the program
		Complexity is 1 Unit of time for each variable............
		*///----------------------------------------------------------
            int qList[20];
			int curService;
			int n,i,j,sum=0;
			int cylinder,calc,temp;
			int pending_queue[20],reverse_queue[20];
			int t1=0,t2=0;

	
            printf("Enter the cylinder Size :");
            	scanf("%d",&cylinder);
				cylinder = cylinder -1;
            
			printf("Current Head Position is: ");
           		scanf("%d",&curService);
           
			printf("Number of pending queue request :");
            	scanf("%d",&n);
            
			printf("Please type Queue List : ");

	/*------------------------------------------------------------
		Taking pending queue list input from user.
	*///------------------------------------------------------------	

            for(i=1;i<=n;i++)
            {
                        scanf("%d",&temp);
                        if(temp>=curService)
                        {
                        	pending_queue[t1]=temp;
                        	t1++;
                        }
                        else
                        {
                         	reverse_queue[t2]=temp;
                            t2++;
                        }
            }
            for(i=0;i<t1-1;i++)
            {
                        for(j=i+1;j<t1;j++)
                        {
                                    if(pending_queue[i]>pending_queue[j])
                                    {
                                                temp=pending_queue[i];
                                                pending_queue[i]=pending_queue[j];
                                                pending_queue[j]=temp;
                                    }
                        }
            }
	/*------------------------------------------------------------
		Sorting all pending Queue after taking input from the user.
		Complexity O(n^2)
	*///---------------------------------------------------------	

            for(i=0;i<t2-1;i++)
            {
            	for(j=i+1;j<t2;j++)
                {
            	    if(reverse_queue[i]>reverse_queue[j])
                    {
		                 temp=reverse_queue[i];
		                 reverse_queue[i]=reverse_queue[j];
		                 reverse_queue[j]=temp;
		             }
                }
            }

	/*------------------------------------------------------------
		Calculating the distance and Sum of all distance
	*///---------------------------------------------------------	
	
		        for(i=1,j=0;j<t1;i++,j++)
				    qList[i]=pending_queue[j];
				    	qList[i]=cylinder;
				   			 qList[i+1]=0;
            	
				for(i=t1+3,j=0;j<t2;i++,j++)
				    qList[i]=reverse_queue[j];
				   		 qList[0]=curService;
		        
				
				for(j=0;j<=n+1;j++)
		        {
		                    calc=abs(qList[j+1]-qList[j]);
		                    sum+=calc;
			     }
            int result = sum-cylinder;
            printf("Total Distance is : %d\n",result); // Final Result ( Total Distance)     
}



// Total Complexity is : O(n^2)
/*
Output:
Enter the cylinder Size :5000
Current Head Position is: 143
Number of pending queue request :9
Please type Queue List : 86
130	913	948	1022	1470	1509	1750	1774
Total Distance is : 4986

*/


